/**
 * @name responsive-config
 * @description Core responsive-config provider in ngx-responsive
 *
 * @license MIT
 */
import { EventEmitter, TemplateRef, ViewContainerRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../responsive-state/responsive-state';
import { PlatformService } from '../platform-service/platform.service';
import * as ɵngcc0 from '@angular/core';
export declare abstract class RESPONSIVE_BASE<T> implements OnInit, OnDestroy {
    private templateRef;
    private viewContainer;
    private _responsiveState;
    private cd;
    private platformService;
    private _noRepeat;
    private _sizes_grid_state;
    private _others_grid_state;
    private _directive;
    private _subscription_Bootstrap;
    private _subscription_Browser;
    private _subscription_Pixel_Ratio;
    private _subscription_Device;
    private _subscription_Orientation;
    private _subscription_Standard;
    private _subscription_IE_Version;
    private _subscription_custom_sizes;
    protected _showWhenTrue: boolean;
    private set_active_subscriptions;
    private _isEnabledForPlatform;
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    protected eventChanges: EventEmitter<any>;
    protected setGrid(grid_state: any, directive: string): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private showHide;
    private updateView;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<RESPONSIVE_BASE<any>, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<RESPONSIVE_BASE<any>, never, never, {}, {}, never>;
}

//# sourceMappingURL=responsive-base.d.ts.map