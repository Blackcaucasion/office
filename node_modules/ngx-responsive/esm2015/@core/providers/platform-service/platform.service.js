import { __decorate, __param } from "tslib";
import { Inject, PLATFORM_ID, Injectable } from '@angular/core';
import { ResponsiveConfig } from '../responsive-config/responsive-config';
import { isPlatformBrowser, isPlatformServer } from '@angular/common';
let PlatformService = class PlatformService {
    constructor(_platformId, responsiveConfig) {
        this._platformId = _platformId;
        this.responsiveConfig = responsiveConfig;
        this.isServer = isPlatformServer(_platformId);
        this.isBrowser = isPlatformBrowser(_platformId);
    }
    isEnabledForPlatform() {
        return this.isBrowser || this.responsiveConfig.config.renderOnServer;
    }
};
PlatformService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
    { type: ResponsiveConfig, decorators: [{ type: Inject, args: [ResponsiveConfig,] }] }
];
PlatformService = __decorate([
    Injectable(),
    __param(0, Inject(PLATFORM_ID)),
    __param(1, Inject(ResponsiveConfig))
], PlatformService);
export { PlatformService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1yZXNwb25zaXZlLyIsInNvdXJjZXMiOlsiQGNvcmUvcHJvdmlkZXJzL3BsYXRmb3JtLXNlcnZpY2UvcGxhdGZvcm0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBR3RFLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7SUFLMUIsWUFDd0MsV0FBVyxFQUNmLGdCQUFrQztRQUQ5QixnQkFBVyxHQUFYLFdBQVcsQ0FBQTtRQUNmLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFFcEUsSUFBSSxDQUFDLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsU0FBUyxHQUFHLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTSxvQkFBb0I7UUFDekIsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDO0lBQ3ZFLENBQUM7Q0FDRixDQUFBOzs0Q0FWSSxNQUFNLFNBQUMsV0FBVztZQUNpQyxnQkFBZ0IsdUJBQW5FLE1BQU0sU0FBQyxnQkFBZ0I7O0FBUGYsZUFBZTtJQUQzQixVQUFVLEVBQUU7SUFPUixXQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUNuQixXQUFBLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFBO0dBUGhCLGVBQWUsQ0FnQjNCO1NBaEJZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmltcG9ydCB7IEluamVjdCwgUExBVEZPUk1fSUQsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUmVzcG9uc2l2ZUNvbmZpZyB9IGZyb20gJy4uL3Jlc3BvbnNpdmUtY29uZmlnL3Jlc3BvbnNpdmUtY29uZmlnJztcclxuaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIsIGlzUGxhdGZvcm1TZXJ2ZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUGxhdGZvcm1TZXJ2aWNlIHtcclxuXHJcbiAgaXNTZXJ2ZXI6IGJvb2xlYW47XHJcbiAgaXNCcm93c2VyOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIEBJbmplY3QoUExBVEZPUk1fSUQpIHByaXZhdGUgcmVhZG9ubHkgX3BsYXRmb3JtSWQsXHJcbiAgICBASW5qZWN0KFJlc3BvbnNpdmVDb25maWcpIHByaXZhdGUgcmVzcG9uc2l2ZUNvbmZpZzogUmVzcG9uc2l2ZUNvbmZpZ1xyXG4gICkge1xyXG4gICAgdGhpcy5pc1NlcnZlciA9IGlzUGxhdGZvcm1TZXJ2ZXIoX3BsYXRmb3JtSWQpO1xyXG4gICAgdGhpcy5pc0Jyb3dzZXIgPSBpc1BsYXRmb3JtQnJvd3NlcihfcGxhdGZvcm1JZCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgaXNFbmFibGVkRm9yUGxhdGZvcm0oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5pc0Jyb3dzZXLCoHx8IHRoaXMucmVzcG9uc2l2ZUNvbmZpZy5jb25maWcucmVuZGVyT25TZXJ2ZXI7XHJcbiAgfVxyXG59Il19