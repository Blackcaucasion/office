{"version":3,"file":"browsers-directives.d.ts","sources":["browsers-directives.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @name browser-directives\r\n * @description Browser directives in ngx-responsive\r\n *\r\n * @license MIT\r\n */\r\nimport { TemplateRef, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\r\nimport { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';\r\nimport { RESPONSIVE_BASE } from '../../@core/providers/responsive-base/responsive-base';\r\nimport { PlatformService } from '../../@core/providers/platform-service/platform.service';\r\nexport declare class IsChromeDirective extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isChrome(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsFirefoxDirective extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isFirefox(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsSafariDirective extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isSafari(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsOperaDirective extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isOpera(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsIEDirective extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isIE(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class ShowItBrowserDirective extends RESPONSIVE_BASE<any> {\r\n    protected _showWhenTrue: boolean;\r\n    set showItBrowser(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class HideItBrowserDirective extends RESPONSIVE_BASE<any> {\r\n    protected _showWhenTrue: boolean;\r\n    set hideItBrowser(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsIE9Directive extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isIE9(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsIE10Directive extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isIE10(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsIE11Directive extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isIE11(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class IsIE12Directive extends RESPONSIVE_BASE<any> {\r\n    protected _state: string;\r\n    protected _showWhenTrue: boolean;\r\n    set isIE12(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class ShowIEVersionDirective extends RESPONSIVE_BASE<any> {\r\n    protected _showWhenTrue: boolean;\r\n    set showIEVersion(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\nexport declare class HideIEVersionDirective extends RESPONSIVE_BASE<any> {\r\n    protected _showWhenTrue: boolean;\r\n    set hideIEVersion(grid_state: string[] | string);\r\n    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);\r\n}\r\n"]}