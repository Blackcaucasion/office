/**
 * @name pixelratio.directives
 * @description pixelratio directives in ngx-responsive
 *
 * @license MIT
 */
import { EventEmitter, TemplateRef, ViewContainerRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { RESPONSIVE_BASE } from '../../@core/providers/responsive-base/responsive-base';
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
import * as ɵngcc0 from '@angular/core';
export declare class Is1xPixelDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set is1xPixel(grid_state: string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<Is1xPixelDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<Is1xPixelDirective, "[is1xPixel]", never, { "is1xPixel": "is1xPixel"; }, {}, never>;
}
export declare class IsRetinaDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isRetina(grid_state: string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<IsRetinaDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<IsRetinaDirective, "[isRetina]", never, { "isRetina": "isRetina"; }, {}, never>;
}
export declare class Is4kDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isRetina(grid_state: string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<Is4kDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<Is4kDirective, "[is4k]", never, { "isRetina": "isRetina"; }, {}, never>;
}
export declare class PixelRatioInfoDirective implements OnInit, OnDestroy {
    private _responsiveState;
    private viewContainer;
    private cd;
    currentstate: string;
    private _subscription;
    private noRepeat;
    private _isEnabledForPlatform;
    set pixelratioInfo(grid_state: string[] | string);
    pixelratio: EventEmitter<any>;
    constructor(_responsiveState: ResponsiveState, viewContainer: ViewContainerRef, cd: ChangeDetectorRef, platformService: PlatformService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    updateData(value: any): void;
    _ifValueChanged(oldValue: any, newValue: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PixelRatioInfoDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<PixelRatioInfoDirective, "pixel-ratio-info", never, { "pixelratioInfo": "pixelratioInfo"; }, { "pixelratio": "pixelratio"; }, never>;
}

//# sourceMappingURL=pixelratio-directives.d.ts.map