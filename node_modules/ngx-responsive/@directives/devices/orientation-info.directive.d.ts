/**
 * @name orientation-info.directive
 * @description Device orientation directive in ngx-responsive
 *
 * @license MIT
 */
import { EventEmitter, ViewContainerRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { OrientationInfo } from './orientation-info';
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
import * as ɵngcc0 from '@angular/core';
export declare class OrientationInfoDirective extends OrientationInfo implements OnInit, OnDestroy {
    protected _responsiveState: ResponsiveState;
    protected viewContainer: ViewContainerRef;
    protected cd: ChangeDetectorRef;
    orientation: EventEmitter<any>;
    constructor(_responsiveState: ResponsiveState, viewContainer: ViewContainerRef, cd: ChangeDetectorRef, platformService: PlatformService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    protected _updateData(value: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<OrientationInfoDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<OrientationInfoDirective, "orientation-info", never, {}, { "orientation": "orientation"; }, never>;
}

//# sourceMappingURL=orientation-info.directive.d.ts.map