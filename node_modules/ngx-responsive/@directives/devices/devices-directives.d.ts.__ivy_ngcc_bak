/**
 * @name devices.directives
 * @description Devices directives in ngx-responsive
 *
 * @license MIT
 */
import { TemplateRef, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { RESPONSIVE_BASE } from '../../@core/providers/responsive-base/responsive-base';
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
export declare class IsSmartTvDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isSmartTv(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsDesktopDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isDesktop(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsTabletDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isTablet(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsMobileDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isMobile(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class ShowItDeviceDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    set showItDevice(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class HideItDeviceDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    set hideItDevice(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsIphoneDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isIphone(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsIpadDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isIphone(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsAndroidMobileDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isAndroidMobile(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsAndroidTabletDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isAndroidTablet(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsWindowsPhoneDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isWindowsPhone(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class ShowItStandardDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    set showItStandard(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class HideItStandardDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    set hideItStandard(grid_state: string[] | string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsPortraitDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isPortrait(grid_state: string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
export declare class IsLandscapeDirective extends RESPONSIVE_BASE<any> {
    protected _state: string;
    protected _showWhenTrue: boolean;
    set isLandscape(grid_state: string);
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
}
