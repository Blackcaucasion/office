/**
 * @name custom-sizes.directives
 * @description Custom sizes directives in ngx-responsive
 *
 * @license MIT
 */
import { TemplateRef, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { RESPONSIVE_BASE } from '../../@core/providers/responsive-base/responsive-base';
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
import * as ɵngcc0 from '@angular/core';
export declare class ShowItSizesDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    set showItSizes(_grid_state: any);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ShowItSizesDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ShowItSizesDirective, "[showItSizes]", never, { "showItSizes": "showItSizes"; }, {}, never>;
}
export declare class HideItSizesDirective extends RESPONSIVE_BASE<any> {
    protected _showWhenTrue: boolean;
    constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef, _responsiveState: ResponsiveState, cd: ChangeDetectorRef, platformService: PlatformService);
    set hideItSizes(_grid_state: any);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<HideItSizesDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<HideItSizesDirective, "[hideItSizes]", never, { "hideItSizes": "hideItSizes"; }, {}, never>;
}

//# sourceMappingURL=custom-sizes-directives.d.ts.map