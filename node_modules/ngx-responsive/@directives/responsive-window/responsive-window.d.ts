/**
 * @name responsive-window
 * @description responsiveWindow Directive in ngx-responsive
 *
 * @license MIT
 */
import { DoCheck, ElementRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { ResponsiveConfig } from "../../@core/providers/responsive-config/responsive-config";
import { Observable } from "rxjs";
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
import * as ɵngcc0 from '@angular/core';
export declare class ResponsiveWindowDirective implements OnInit, OnDestroy, DoCheck {
    private _responsiveState;
    private el;
    private cd;
    private _responsiveConfig;
    private _noRepeat;
    private element;
    private _isEnabledForPlatform;
    name: string;
    currentBreakpoint$: Observable<string>;
    constructor(_responsiveState: ResponsiveState, el: ElementRef, cd: ChangeDetectorRef, platformService: PlatformService, _responsiveConfig: ResponsiveConfig);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    getWidth(): number;
    getCurrentBreakpoint(): string;
    private _ifValueChanged;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ResponsiveWindowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<ResponsiveWindowDirective, "[responsive-window]", ["container"], { "name": "responsive-window"; }, {}, never>;
}

//# sourceMappingURL=responsive-window.d.ts.map