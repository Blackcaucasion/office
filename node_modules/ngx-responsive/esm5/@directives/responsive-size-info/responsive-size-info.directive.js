import { __decorate, __extends } from "tslib";
/**
 * @name responsive-size-info.directive
 * @description Responsive Size Info directive in ngx-responsive
 *
 * @license MIT
 */
import { Directive, EventEmitter, Input, Output, ViewContainerRef, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { ResponsiveState } from '../../@core/providers/responsive-state/responsive-state';
import { ResponsiveSizeInfo } from './responsive-size-info';
import { PlatformService } from '../../@core/providers/platform-service/platform.service';
var ResponsiveSizeInfoDirective = /** @class */ (function (_super) {
    __extends(ResponsiveSizeInfoDirective, _super);
    function ResponsiveSizeInfoDirective(_responsiveState, viewContainer, cd, platformService) {
        var _this = _super.call(this, _responsiveState, platformService) || this;
        _this._responsiveState = _responsiveState;
        _this.viewContainer = viewContainer;
        _this.cd = cd;
        _this.statechanges = new EventEmitter();
        return _this;
    }
    Object.defineProperty(ResponsiveSizeInfoDirective.prototype, "responsiveSizeInfo", {
        set: function (grid_state) {
            this._updateData(this.currentstate);
        },
        enumerable: true,
        configurable: true
    });
    ResponsiveSizeInfoDirective.prototype.ngOnInit = function () {
        this.connect();
    };
    ResponsiveSizeInfoDirective.prototype.ngOnDestroy = function () {
        this.disconnect();
    };
    ResponsiveSizeInfoDirective.prototype._updateData = function (value) {
        this.statechanges.emit(value);
        this.cd.markForCheck();
    };
    ResponsiveSizeInfoDirective.ctorParameters = function () { return [
        { type: ResponsiveState },
        { type: ViewContainerRef },
        { type: ChangeDetectorRef },
        { type: PlatformService }
    ]; };
    __decorate([
        Input()
    ], ResponsiveSizeInfoDirective.prototype, "responsiveSizeInfo", null);
    __decorate([
        Output()
    ], ResponsiveSizeInfoDirective.prototype, "statechanges", void 0);
    ResponsiveSizeInfoDirective = __decorate([
        Directive({ selector: 'responsiveSizeInfo' })
    ], ResponsiveSizeInfoDirective);
    return ResponsiveSizeInfoDirective;
}(ResponsiveSizeInfo));
export { ResponsiveSizeInfoDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzcG9uc2l2ZS1zaXplLWluZm8uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXJlc3BvbnNpdmUvIiwic291cmNlcyI6WyJAZGlyZWN0aXZlcy9yZXNwb25zaXZlLXNpemUtaW5mby9yZXNwb25zaXZlLXNpemUtaW5mby5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9ILE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUMxRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0seURBQXlELENBQUM7QUFHMUY7SUFBaUQsK0NBQWtCO0lBTy9ELHFDQUFtQixnQkFBaUMsRUFDekMsYUFBK0IsRUFDL0IsRUFBcUIsRUFDNUIsZUFBZ0M7UUFIcEMsWUFJSSxrQkFBTSxnQkFBZ0IsRUFBRSxlQUFlLENBQUMsU0FBRztRQUo1QixzQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWlCO1FBQ3pDLG1CQUFhLEdBQWIsYUFBYSxDQUFrQjtRQUMvQixRQUFFLEdBQUYsRUFBRSxDQUFtQjtRQUp0QixrQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDOztJQU1qQixDQUFDO0lBVHRDLHNCQUFJLDJEQUFrQjthQUF0QixVQUF1QixVQUE2QjtZQUN6RCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTtJQVFELDhDQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUNELGlEQUFXLEdBQVg7UUFDSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUNTLGlEQUFXLEdBQXJCLFVBQXNCLEtBQVU7UUFDNUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUMzQixDQUFDOztnQkFkb0MsZUFBZTtnQkFDMUIsZ0JBQWdCO2dCQUMzQixpQkFBaUI7Z0JBQ1gsZUFBZTs7SUFSM0I7UUFBUixLQUFLLEVBQUU7eUVBRVA7SUFDUztRQUFULE1BQU0sRUFBRTtxRUFBc0Q7SUFMdEQsMkJBQTJCO1FBRHZDLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxvQkFBb0IsRUFBRSxDQUFDO09BQ2pDLDJCQUEyQixDQXNCdkM7SUFBRCxrQ0FBQztDQUFBLEFBdEJELENBQWlELGtCQUFrQixHQXNCbEU7U0F0QlksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBuYW1lIHJlc3BvbnNpdmUtc2l6ZS1pbmZvLmRpcmVjdGl2ZVxyXG4gKiBAZGVzY3JpcHRpb24gUmVzcG9uc2l2ZSBTaXplIEluZm8gZGlyZWN0aXZlIGluIG5neC1yZXNwb25zaXZlXHJcbiAqXHJcbiAqIEBsaWNlbnNlIE1JVFxyXG4gKi9cclxuaW1wb3J0IHsgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDb250YWluZXJSZWYsIE9uSW5pdCwgT25EZXN0cm95LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgUmVzcG9uc2l2ZVN0YXRlIH0gZnJvbSAnLi4vLi4vQGNvcmUvcHJvdmlkZXJzL3Jlc3BvbnNpdmUtc3RhdGUvcmVzcG9uc2l2ZS1zdGF0ZSc7XHJcbmltcG9ydCB7IFJlc3BvbnNpdmVTaXplSW5mbyB9IGZyb20gJy4vcmVzcG9uc2l2ZS1zaXplLWluZm8nO1xyXG5pbXBvcnQgeyBQbGF0Zm9ybVNlcnZpY2UgfSBmcm9tICcuLi8uLi9AY29yZS9wcm92aWRlcnMvcGxhdGZvcm0tc2VydmljZS9wbGF0Zm9ybS5zZXJ2aWNlJztcclxuXHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ3Jlc3BvbnNpdmVTaXplSW5mbycgfSlcclxuZXhwb3J0IGNsYXNzIFJlc3BvbnNpdmVTaXplSW5mb0RpcmVjdGl2ZSBleHRlbmRzIFJlc3BvbnNpdmVTaXplSW5mbyBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcclxuICAgIHB1YmxpYyBjdXJyZW50c3RhdGU6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHNldCByZXNwb25zaXZlU2l6ZUluZm8oZ3JpZF9zdGF0ZTogc3RyaW5nW10gfCBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl91cGRhdGVEYXRhKHRoaXMuY3VycmVudHN0YXRlKTtcclxuICAgIH1cclxuICAgIEBPdXRwdXQoKSBzdGF0ZWNoYW5nZXM6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBfcmVzcG9uc2l2ZVN0YXRlOiBSZXNwb25zaXZlU3RhdGUsXHJcbiAgICAgICAgcHVibGljIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICAgICAgcHVibGljIGNkOiBDaGFuZ2VEZXRlY3RvclJlZixcclxuICAgICAgICBwbGF0Zm9ybVNlcnZpY2U6IFBsYXRmb3JtU2VydmljZVxyXG4gICAgKSB7IHN1cGVyKF9yZXNwb25zaXZlU3RhdGUsIHBsYXRmb3JtU2VydmljZSk7IH1cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY29ubmVjdCgpO1xyXG4gICAgfVxyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0KCk7XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgX3VwZGF0ZURhdGEodmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuc3RhdGVjaGFuZ2VzLmVtaXQodmFsdWUpO1xyXG4gICAgICAgIHRoaXMuY2QubWFya0ZvckNoZWNrKCk7XHJcbiAgICB9XHJcbn1cclxuIl19