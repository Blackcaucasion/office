{"ast":null,"code":"import { OfficeDialogComponent } from './office-dialog/office-dialog.component';\nimport { AddOfficeComponent } from './add-office/add-office.component';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../shared/office.service\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/grid-list\";\nimport * as i8 from \"@angular/material/icon\";\n\nfunction HomeComponent_ng_container_6_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 5);\n    i0.ɵɵelementStart(1, \"mat-grid-list\", 6);\n    i0.ɵɵtext(2, \"c \");\n    i0.ɵɵelementStart(3, \"mat-grid-tile\", 7);\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"people_alt\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, HomeComponent_ng_container_6_mat_card_1_Template, 6, 0, \"mat-card\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.offices$));\n  }\n}\n\nexport class HomeComponent {\n  constructor(dialog, officeservice, changeDetectionRef) {\n    this.dialog = dialog;\n    this.officeservice = officeservice;\n    this.changeDetectionRef = changeDetectionRef;\n    this.subscriptions = new Subscription();\n    this.officeList = [];\n    this.offices$ = new BehaviorSubject(this.officeList);\n  }\n\n  ngOnInit() {\n    this.officeservice.getOffices().subscribe(data => data.map(acttions => {\n      var _a;\n\n      const value = acttions.payload.doc.data();\n      value.id = acttions.payload.doc.id;\n      this.officeList.push(value);\n      (_a = this.offices$) === null || _a === void 0 ? void 0 : _a.next(this.officeList);\n      this.changeDetectionRef.detectChanges();\n    }));\n  }\n\n  openAlertDialog(id) {\n    this.dialog.open(OfficeDialogComponent, {\n      width: '250px',\n      height: '100px',\n      data: {\n        key: id\n      }\n    });\n  }\n\n  addOffice() {\n    this.dialog.open(AddOfficeComponent, {});\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n    this.offices$.subscribe();\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.OfficeService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[\"color\", \"primary\"], [1, \"spacer\"], [\"mat-flat-button\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"example-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"example-card\"], [\"cols\", \"4\"], [\"colspan\", \"1\", \"rowspan\", \"2\", \"style.background\", \"lightpink\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n      i0.ɵɵelementStart(1, \"span\");\n      i0.ɵɵtext(2, \"Office Man\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"span\", 1);\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_4_listener() {\n        return ctx.addOffice();\n      });\n      i0.ɵɵtext(5, \"Add Office\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, HomeComponent_ng_container_6_Template, 3, 3, \"ng-container\", 3);\n      i0.ɵɵpipe(7, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 1, ctx.offices$));\n    }\n  },\n  directives: [i3.MatToolbar, i4.MatButton, i5.NgIf, i5.NgForOf, i6.MatCard, i7.MatGridList, i7.MatGridTile, i8.MatIcon],\n  pipes: [i5.AsyncPipe],\n  styles: [\".spacer[_ngcontent-%COMP%]{\\r\\n    flex:1 1 auto;\\r\\n\\r\\n}\\r\\n\\r\\n.menu[_ngcontent-%COMP%]{\\r\\n  position: absolute;\\r\\n  top: 8px;\\r\\n  right: 16px;\\r\\n  font-size: 18px;\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\r\\n    position: sticky;\\r\\n    top: 0;\\r\\n    z-index: 1;\\r\\n  }\\r\\n\\r\\n.offices[_ngcontent-%COMP%]{\\r\\n    list-style-type: none;\\r\\n  }\\r\\n\\r\\n.offices[_ngcontent-%COMP%]   .badge[_ngcontent-%COMP%] {\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n  \\r\\n  }\\r\\n\\r\\n.example-card[_ngcontent-%COMP%] {\\r\\n    max-width: 400px;\\r\\n    margin: 10px;\\r\\n    padding: 0px !important;\\r\\n  }\\r\\n\\r\\n.example-header-image[_ngcontent-%COMP%] {\\r\\n    background-size: cover;\\r\\n  }\\r\\n\\r\\n.icon[_ngcontent-%COMP%]{\\r\\n    \\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7O0FBRWpCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixXQUFXO0VBQ1gsZUFBZTtBQUNqQjs7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixNQUFNO0lBQ04sVUFBVTtFQUNaOztBQUNBO0lBQ0UscUJBQXFCO0VBQ3ZCOztBQUNBO0lBQ0Usc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixrQ0FBa0M7SUFDbEMsOEJBQThCOztFQUVoQzs7QUFDQTtJQUNFLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osdUJBQXVCO0VBQ3pCOztBQUVBO0lBQ0Usc0JBQXNCO0VBQ3hCOztBQUNBOztFQUVBIiwiZmlsZSI6ImhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcGFjZXJ7XHJcbiAgICBmbGV4OjEgMSBhdXRvO1xyXG5cclxufVxyXG5cclxuLm1lbnV7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogOHB4O1xyXG4gIHJpZ2h0OiAxNnB4O1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xyXG4gICAgcG9zaXRpb246IHN0aWNreTtcclxuICAgIHRvcDogMDtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgfVxyXG4gIC5vZmZpY2Vze1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gIH1cclxuICAub2ZmaWNlcyAuYmFkZ2Uge1xyXG4gICAgLyogZm9udC1zaXplOiBzbWFsbDsgKi9cclxuICAgIC8qIGNvbG9yOiB3aGl0ZTsgKi9cclxuICAgIC8qIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07ICovXHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiMzYTdjYzM7ICovXHJcbiAgXHJcbiAgfVxyXG4gIC5leGFtcGxlLWNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxuICAgIHBhZGRpbmc6IDBweCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcbiAgLmljb257XHJcbiAgICBcclxuICB9Il19 */\"],\n  changeDetection: 0\n});","map":{"version":3,"sources":["C:\\Users\\Luntu\\Documents\\staffManager\\staffManager\\src\\app\\home\\home.component.ts","C:\\Users\\Luntu\\Documents\\staffManager\\staffManager\\src\\app\\home\\home.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport {MatDialog,} from '@angular/material/dialog';\nimport { OfficeDialogComponent } from './office-dialog/office-dialog.component';\nimport { AddOfficeComponent } from './add-office/add-office.component';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { Office } from 'src/models/staff.models';\nimport { OfficeService } from '../shared/office.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomeComponent implements OnInit ,OnDestroy {\n\n  private readonly subscriptions: Subscription = new Subscription();\n\n  public officeList: Array<Office> = [];\n\n  public offices$: BehaviorSubject<Office[]> = new BehaviorSubject<Office[]>(this.officeList) ;\n\n  constructor(public dialog:MatDialog,\n  public  officeservice:OfficeService,\n  \n  private readonly changeDetectionRef: ChangeDetectorRef,\n  ) { }\n    \n    \n  public ngOnInit(): void {\n      this.officeservice.getOffices().subscribe(data =>\n        data.map(acttions => {\n          const value = acttions.payload.doc.data() as Office\n          value.id =acttions.payload.doc.id;\n     \n          this.officeList.push(value)\n                 this.offices$?.next(this.officeList)\n                 this.changeDetectionRef.detectChanges();\n\n         }\n   \n         ))\n      \n  }\n\n\n  openAlertDialog(id:any) {\n   this.dialog.open(OfficeDialogComponent,{\n      width: '250px',\n      height:'100px',\n      data:{key:id   },\n    });\n\n  }\n\n  public addOffice(){\n    this.dialog.open(AddOfficeComponent,{\n\n    })\n\n}\npublic ngOnDestroy(): void {\nthis.subscriptions.unsubscribe()\nthis.offices$.subscribe()\n}\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Office Man</span>\n    <span class=\"spacer\"></span>\n    <button mat-flat-button (click)=\" addOffice()\">Add Office</button>\n</mat-toolbar>\n<ng-container *ngIf=\"(offices$|async)\">\n    <!-- <ul class=\"offices\"> -->\n        <!-- <li > -->\n            <!-- <mat-card>\n                <span class=\"badge\"   routerLink=\"/office/{{office.id}}\">\n                    <mat-icon>people_alt</mat-icon>\n                    <br>\n                    04/20\n                </span>\n                {{office.name}}\n                <div>\n                    <button  class=\"menu\" (click)=\"openAlertDialog(office.id)\">\n                        <mat-icon>more_vert</mat-icon>\n                    </button>\n                </div>\n            </mat-card> -->\n            <mat-card class=\"example-card\" *ngFor=\"let office of (offices$|async) ;\">\n                <mat-grid-list cols=\"4\">c \n                    <mat-grid-tile\n             colspan=\"1\"\n             rowspan=\"2\"\n            style.background=\"lightpink\">\n            <mat-icon>people_alt</mat-icon>\n        </mat-grid-tile>\n                <!-- <div class=\"icon\" style=\"width: 10%;background-color: blue;height: 55px;\">\n                    <mat-icon>people_alt</mat-icon>\n                </div> -->\n                <!-- <mat-card-header>\n                  <div mat-card class=\"example-header-image\"><mat-icon>people_alt</mat-icon>\n                  </div>\n                  <mat-card-title>Shiba Inu</mat-card-title>\n                  <mat-card-subtitle>Dog Breed</mat-card-subtitle>\n                </mat-card-header> -->\n                </mat-grid-list>\n            \n              </mat-card>\n              \n        <!-- </li> -->\n\n\n    <!-- </ul> -->\n</ng-container>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}